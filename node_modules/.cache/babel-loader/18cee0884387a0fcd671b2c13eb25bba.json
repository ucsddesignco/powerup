{"ast":null,"code":"import { gsap } from \"gsap\";\nimport { lerp, getMousePos, getSiblings } from \"./utils\"; // Grab the mouse position and set it to mouse state\n\nlet mouse = {\n  x: 0,\n  y: 0\n};\nwindow.addEventListener(\"mousemove\", ev => mouse = getMousePos(ev));\nexport default class Cursor {\n  constructor(el) {\n    // Varibles\n    this.Cursor = el;\n    this.Cursor.style.opacity = 0;\n    this.Item = document.querySelectorAll(\".hero-inner-link-item\");\n    this.Hero = document.querySelector(\".hero-inner\");\n    this.bounds = this.Cursor.getBoundingClientRect();\n    this.cursorConfigs = {\n      x: {\n        previous: 0,\n        current: 0,\n        amt: 0.2\n      },\n      y: {\n        previous: 0,\n        current: 0,\n        amt: 0.2\n      }\n    };\n\n    this.onMouseMoveEv = () => {\n      this.cursorConfigs.x.previous = this.cursorConfigs.x.current = mouse.x;\n      this.cursorConfigs.y.previous = this.cursorConfigs.y.previous = mouse.y; // Set cursor opacity to 1 when hovered on screen\n\n      gsap.to(this.Cursor, {\n        duration: 1,\n        ease: \"Power3.easeOut\",\n        opacity: 1\n      }); // Execute scale function\n\n      this.onScaleMouse(); // The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.\n\n      requestAnimationFrame(() => this.render()); // Clean up function\n\n      window.removeEventListener(\"mousemove\", this.onMouseMoveEv);\n    }; // Scale cursor animation\n\n\n    window.addEventListener(\"mousemove\", this.onMouseMoveEv);\n  }\n\n  onScaleMouse() {\n    // Loop through all items\n    this.Item.forEach(link => {\n      // If I am hovering on the item for on page load I want to scale the cursor media\n      if (link.matches(\":hover\")) {\n        this.setVideo(link);\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\n      } //On mouse enter scale the media-cursor to .8\n\n\n      link.addEventListener(\"mouseenter\", () => {\n        this.setVideo(link);\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\n      }); //On mouse enter scale the media-cursor to 0\n\n      link.addEventListener(\"mouseleave\", () => {\n        this.ScaleCursor(this.Cursor.children[0], 0);\n      }); //Hover on a tag to expand to 1.2\n\n      link.children[1].addEventListener(\"mouseenter\", () => {\n        this.Cursor.classList.add(\"media-blend\");\n        this.ScaleCursor(this.Cursor.children[0], 1.2);\n      }); // Bring scale back down .8\n\n      link.children[1].addEventListener(\"mouseleave\", () => {\n        this.Cursor.classList.remove(\"media-blend\");\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\n      });\n    });\n  }\n\n  setVideo(el) {\n    // Grab the data-video-src and make sure it matches the video that should be displayed\n    let src = el.getAttribute(\"data-video-src\");\n    let video = document.querySelector(`#${src}`);\n    let siblings = getSiblings(video);\n\n    if (video.id == src) {\n      gsap.set(video, {\n        zIndex: 4,\n        opacity: 1\n      });\n      siblings.forEach(i => {\n        gsap.set(i, {\n          zIndex: 1,\n          opacity: 0\n        });\n      });\n    }\n  }\n\n  ScaleCursor(el, amount) {\n    gsap.to(el, {\n      duration: 0.6,\n      scale: amount,\n      ease: \"Power3.easeOut\"\n    });\n  }\n\n  render() {\n    this.cursorConfigs.x.current = mouse.x;\n    this.cursorConfigs.y.current = mouse.y; // lerp\n\n    for (const key in this.cursorConfigs) {\n      // key will be x & y\n      // WTF IS LERP?\n      // Lerp - A lerp returns the value between two numbers at a specified, decimal midpoint:\n      this.cursorConfigs[key].previous = lerp(this.cursorConfigs[key].previous, this.cursorConfigs[key].current, this.cursorConfigs[key].amt);\n    } // Setting the cursor x and y to our cursoer html element\n\n\n    this.Cursor.style.transform = `translateX(${this.cursorConfigs.x.previous}px) translateY(${this.cursorConfigs.y.previous}px)`; // RAF\n\n    requestAnimationFrame(() => this.render());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/shawn/Documents/GitHub/powerup/src/components/cursor.js"],"names":["gsap","lerp","getMousePos","getSiblings","mouse","x","y","window","addEventListener","ev","Cursor","constructor","el","style","opacity","Item","document","querySelectorAll","Hero","querySelector","bounds","getBoundingClientRect","cursorConfigs","previous","current","amt","onMouseMoveEv","to","duration","ease","onScaleMouse","requestAnimationFrame","render","removeEventListener","forEach","link","matches","setVideo","ScaleCursor","children","classList","add","remove","src","getAttribute","video","siblings","id","set","zIndex","i","amount","scale","key","transform"],"mappings":"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","sourcesContent":["import { gsap } from \"gsap\";\r\nimport { lerp, getMousePos, getSiblings } from \"./utils\";\r\n\r\n// Grab the mouse position and set it to mouse state\r\nlet mouse = { x: 0, y: 0 };\r\nwindow.addEventListener(\"mousemove\", (ev) => (mouse = getMousePos(ev)));\r\nexport default class Cursor {\r\n  constructor(el) {\r\n    // Varibles\r\n    this.Cursor = el;\r\n    this.Cursor.style.opacity = 0;\r\n    this.Item = document.querySelectorAll(\".hero-inner-link-item\");\r\n    this.Hero = document.querySelector(\".hero-inner\");\r\n    this.bounds = this.Cursor.getBoundingClientRect();\r\n    this.cursorConfigs = {\r\n      x: { previous: 0, current: 0, amt: 0.2 },\r\n      y: { previous: 0, current: 0, amt: 0.2 },\r\n    };\r\n    this.onMouseMoveEv = () => {\r\n      this.cursorConfigs.x.previous = this.cursorConfigs.x.current = mouse.x;\r\n      this.cursorConfigs.y.previous = this.cursorConfigs.y.previous = mouse.y;\r\n\r\n      // Set cursor opacity to 1 when hovered on screen\r\n      gsap.to(this.Cursor, {\r\n        duration: 1,\r\n        ease: \"Power3.easeOut\",\r\n        opacity: 1,\r\n      });\r\n      // Execute scale function\r\n      this.onScaleMouse();\r\n\r\n      // The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.\r\n      requestAnimationFrame(() => this.render());\r\n      // Clean up function\r\n      window.removeEventListener(\"mousemove\", this.onMouseMoveEv);\r\n    };\r\n    // Scale cursor animation\r\n    window.addEventListener(\"mousemove\", this.onMouseMoveEv);\r\n  }\r\n\r\n  onScaleMouse() {\r\n    // Loop through all items\r\n    this.Item.forEach((link) => {\r\n      // If I am hovering on the item for on page load I want to scale the cursor media\r\n      if (link.matches(\":hover\")) {\r\n        this.setVideo(link);\r\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\r\n      }\r\n      //On mouse enter scale the media-cursor to .8\r\n      link.addEventListener(\"mouseenter\", () => {\r\n        this.setVideo(link);\r\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\r\n      });\r\n      //On mouse enter scale the media-cursor to 0\r\n      link.addEventListener(\"mouseleave\", () => {\r\n        this.ScaleCursor(this.Cursor.children[0], 0);\r\n      });\r\n      //Hover on a tag to expand to 1.2\r\n      link.children[1].addEventListener(\"mouseenter\", () => {\r\n        this.Cursor.classList.add(\"media-blend\");\r\n        this.ScaleCursor(this.Cursor.children[0], 1.2);\r\n      });\r\n      // Bring scale back down .8\r\n      link.children[1].addEventListener(\"mouseleave\", () => {\r\n        this.Cursor.classList.remove(\"media-blend\");\r\n        this.ScaleCursor(this.Cursor.children[0], 0.8);\r\n      });\r\n    });\r\n  }\r\n\r\n  setVideo(el) {\r\n    // Grab the data-video-src and make sure it matches the video that should be displayed\r\n    let src = el.getAttribute(\"data-video-src\");\r\n    let video = document.querySelector(`#${src}`);\r\n    let siblings = getSiblings(video);\r\n\r\n    if (video.id == src) {\r\n      gsap.set(video, { zIndex: 4, opacity: 1 });\r\n      siblings.forEach((i) => {\r\n        gsap.set(i, { zIndex: 1, opacity: 0 });\r\n      });\r\n    }\r\n  }\r\n\r\n  ScaleCursor(el, amount) {\r\n    gsap.to(el, {\r\n      duration: 0.6,\r\n      scale: amount,\r\n      ease: \"Power3.easeOut\",\r\n    });\r\n  }\r\n  render() {\r\n    this.cursorConfigs.x.current = mouse.x;\r\n    this.cursorConfigs.y.current = mouse.y;\r\n\r\n    // lerp\r\n    for (const key in this.cursorConfigs) {\r\n      // key will be x & y\r\n      // WTF IS LERP?\r\n      // Lerp - A lerp returns the value between two numbers at a specified, decimal midpoint:\r\n      this.cursorConfigs[key].previous = lerp(\r\n        this.cursorConfigs[key].previous,\r\n        this.cursorConfigs[key].current,\r\n        this.cursorConfigs[key].amt\r\n      );\r\n    }\r\n    // Setting the cursor x and y to our cursoer html element\r\n    this.Cursor.style.transform = `translateX(${this.cursorConfigs.x.previous}px) translateY(${this.cursorConfigs.y.previous}px)`;\r\n    // RAF\r\n    requestAnimationFrame(() => this.render());\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}